{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PersonItem/PersonItem.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/PageNotFound/PageNotFound.tsx","components/NavLinkItem/NavLinkItem.tsx","components/Navigation/Navigation.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","to","slug","cn","sex","name","PersonItem","born","died","mother","motherName","father","fatherName","PeopleTable","people","useParams","map","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","fetchData","peopleFromServer","peopleWithParents","find","personMother","personFather","useEffect","length","PageNotFound","NavLinkItem","memo","text","isActive","Navigation","role","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.48f9d751.chunk.js","sourcesContent":["import { FC } from 'react';\n\nexport const HomePage: FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`../${person.slug}`}\n    className={cn({\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { Person } from '../../types/Person';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  person: Person;\n  slug: string | undefined;\n}\n\nexport const PersonItem: FC<Props> = ({ person, slug }) => {\n  return (\n    <tr\n      key={person.slug}\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': slug === person.slug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n\n      <td>\n        {person.mother && (<PersonLink person={person.mother} />)}\n        {person.motherName && !person.mother && (\n          <p>{person.motherName}</p>\n        )}\n        {!person.motherName && !person.mother && ('-')}\n      </td>\n\n      <td>\n        {person.father && (<PersonLink person={person.father} />)}\n        {person.fatherName && !person.father && (\n          <p>{person.fatherName}</p>\n        )}\n        {!person.fatherName && !person.father && ('-')}\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types/Person';\nimport { PersonItem } from '../PersonItem/PersonItem';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map((person) => (\n          <PersonItem person={person} slug={slug} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types/Person';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  const fetchData = async () => {\n    try {\n      const peopleFromServer = await getPeople();\n\n      const peopleWithParents = peopleFromServer.map((person) => {\n        const mother = peopleFromServer.find(\n          (personMother) => personMother.name === person.motherName,\n        );\n\n        const father = peopleFromServer.find(\n          (personFather) => personFather.name === person.fatherName,\n        );\n\n        return {\n          ...person,\n          mother,\n          father,\n        };\n      });\n\n      setPeople(peopleWithParents);\n    } catch (errorMessage) {\n      setError('Something went wrong');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"box table-container\">\n        {isLoading && <Loader />}\n\n        {!isLoading && (\n          <>\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              {error}\n            </p>\n            {people.length === 0 && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )}\n            <PeopleTable people={people} />\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import cn from 'classnames';\nimport { FC, memo } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  text:string;\n}\n\nexport const NavLinkItem: FC<Props> = memo(({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => cn('navbar-item', {\n        'has-background-grey-lighter': isActive,\n      })}\n    >\n      {text}\n    </NavLink>\n  );\n});\n","import { NavLinkItem } from '../NavLinkItem/NavLinkItem';\n\nexport const Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLinkItem to=\"/\" text=\"Home\" />\n          <NavLinkItem to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound/PageNotFound';\nimport { Navigation } from './components/Navigation/Navigation';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}